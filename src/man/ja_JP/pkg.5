'\" te
.\" Copyright (c) 2007, 2011, Oracle and/or its affiliates. All rights reserved.
.\" Copyright (c) 2012, OmniTI Computer Consulting, Inc. All rights reserved.
.TH pkg 5 "2011 年 8 月 30 日" "SunOS 5.11" "標準、環境、マクロ"
.SH 名前
pkg \- Image Packaging System
.SH 機能説明
.sp
.LP
Image Packaging System、\fBpkg\fR(5) は、ソフトウェアのライフサイクル管理 (インストール、アップグレード、および削除) のために提供されるフレームワークです。Image Packaging System は、一連のキーと値のペアおよび (場合によっては) データペイロードで定義されたアクションのコレクションである、パッケージの単位でソフトウェアを管理します。多くの場合、アクションはファイルシステム内に存在するファイルですが、ドライバ、サービス、ユーザーなどのその他のインストール可能オブジェクトも表します。
.SH パッケージの FMRI とバージョン
.sp
.LP
各パッケージは、スキーム \fBpkg:\fR を使用して、障害管理リソース識別子 (FMRI) によって表されます。パッケージの完全な FMRI は、次の形式のスキーム、パブリッシャー、パッケージ名、およびバージョン文字列で構成されます。
.sp
.in +2
.nf
pkg://opensolaris.org/library/libc@5.11,5.11-0.75:20071001T163427Z
.fi
.in -2
.sp

.sp
.LP
\fBopensolaris.org\fR はパブリッシャーです。\fBlibrary/libc\fR はパッケージ名です。名前空間は階層的であり、その深さは任意ですが、適用される包含関係は存在しません。名前は基本的に任意です。パブリッシャー情報は省略可能ですが、存在する場合は、前に \fBpkg://\fR を付ける必要があります。パブリッシャーを含む FMRI は多くの場合、「完全指定」と呼ばれます。パブリッシャー情報が存在しない場合は、一般に、パッケージ名の前に \fBpkg:/\fR が付けられます。
.sp
.LP
クライアントをパッケージ化すると、通常、FMRI にパブリッシャー情報が含まれていない場合に FMRI のスキームを省略できます。たとえば、\fBpkg:/library/libc\fR を \fBlibrary/libc\fR として記述できます。スキームが省略される場合、クライアントは照合の目的で、パッケージ名の最後のコンポーネントを除くすべてのコンポーネントを省略することもできます。たとえば、\fBlibrary/libc\fR を \fBlibc\fR として記述できます。これは、\fBlibc\fR という名前のパッケージ、または \fB/libc\fR で終わるパッケージ名に一致します。
.sp
.LP
パブリッシャーの名前によって、人、人のグループ、または組織が 1 つ以上のパッケージのソースとして識別されます。パブリッシャーの名前の競合を避け、パブリッシャーを識別しやすくするために、パッケージを公開するエンティティーを表すドメイン名をパブリッシャーの名前として使用することがベストプラクティスです。
.sp
.LP
パッケージ名のあとに、アットマーク記号 (@) で区切られたバージョンが続きます。バージョンは、句読文字で区切られた 4 つの数字の並びで構成されます。最初の 3 つの並びに含まれる要素はドットで区切られ、これらの並びの長さは任意です。バージョンコンポーネント内の先頭のゼロ (たとえば、01.1 または 1.01) は許可されません。末尾のゼロ (たとえば、1.10) は許可されます。
.sp
.LP
バージョンの最初の部分はコンポーネントバージョンです。オペレーティングシステムに緊密に結合されたコンポーネントの場合、これは通常、そのバージョンのオペレーティングシステムでの \fBuname -r\fR の値です。独自の開発ライフサイクルを持つコンポーネントの場合、この並びはドットで区切られたリリース番号 (2.4.10 など) です。
.sp
.LP
バージョンの 2 番目の部分 (存在する場合はコンマ (,) に続いている必要があります) はビルドバージョンです。ビルドバージョンは、パッケージの内容が構築されたオペレーティングシステムのバージョンを指定し、その内容が正常に実行されることを予測できるオペレーティングシステムのバージョンに関する最小の境界が提供されます。
.sp
.LP
バージョンの 3 番目の部分 (存在する場合はハイフン (\fB-\fR) に続いている必要があります) はブランチバージョンです。ブランチバージョンは、ベンダー固有の情報を提供するバージョン管理コンポーネントです。ブランチバージョンは、コンポーネントバージョンとは独立に、パッケージ化のメタデータが変更されたときに 1 増やすことができます。ブランチバージョンには、ビルド番号やその他の情報が含まれていることがあります。
.sp
.LP
バージョンの 4 番目の部分 (存在する場合はコロン (:) に続いている必要があります) はタイムスタンプです。タイムスタンプは、そのパッケージがいつ公開されたかを表します。
.sp
.LP
バージョン間の比較を実行する場合、その左側にあるコンポーネントが同じでないかぎり、バージョン全体のコンポーネントは考慮されません。したがって、「4.3」が「4.2」より大きいため「4.3-1」は「4.2-7」より大きく、「3」が「1」より大きいため「4.3-3」は「4.3-1」より大きくなります。
.sp
.LP
システムの多くの部分では、表示される情報量や必要な情報量を減らすために、必要に応じて FMRI を表示するときには短縮し、入力も短い形式を受け入れます。通常、スキーム、パブリッシャー、ビルドバージョン、およびタイムスタンプは省略できます。すべてのバージョン管理情報を省略できることもあります。
.SH アクション
.sp
.LP
アクションは、システム上のインストール可能オブジェクトを表します。アクションは、パッケージのマニフェスト内に記述されます。すべてのアクションは、最初に名前とキー属性を含みます。また、これらはバージョン履歴をたどる過程で一意のオブジェクトを参照します。アクションには、このほかの属性も含まれます。一部の属性は、パッケージシステムによって直接解釈されます。その他の属性は、システム管理者またはエンドユーザーにのみ役立つ可能性があります。
.sp
.LP
アクションには、次の単純なテキスト表現があります。
.sp
.in +2
.nf
\fIaction_name\fR \fIattribute1\fR=\fIvalue1\fR \fIattribute2\fR=\fIvalue2\fR ...
.fi
.in -2

.sp
.LP
属性の名前に、空白、引用符、または等号 (=) を含めることはできません。最初の等号のあとの文字はすべて、値に属します。値にはすべての文字を含めることができますが、スペースは単一引用符または二重引用符で囲む必要があります。二重引用符で囲まれている文字列の内部で単一引用符をエスケープする必要はなく、単一引用符で囲まれている文字列の内部で二重引用符をエスケープする必要はありません。引用符の前にバックスラッシュ (\\) 文字を付けて、引用文字列が終了しないようにすることができます。バックスラッシュは、バックスラッシュでエスケープできます。
.sp
.LP
複数の値を使用して、属性に複数回名前を付けることができます。これらは、順序なしリストとして扱われます。
.sp
.LP
多くの属性を持つアクションによって、マニフェストファイル内に長い行が作成されることがあります。このような行は、不完全な各行をバックスラッシュで終了することにより折り返すことができます。この継続文字は、属性と値のペアの間に置く必要があることに注意してください。属性も、その値も、さらにその組み合わせも分割することはできません。
.sp
.LP
下に示されている属性セットは、これがすべてではありません。実際、アクションに付加できる属性は任意であるため、標準の属性セットは、将来の開発を実装するために容易に拡張できます。
.sp
.LP
特定のアクション属性によって、パッケージ化コンテキストの外部で追加の操作が実行されます。これらの属性は、下の「アクチュエータ」の節で説明されています。
.SS "ファイルアクション"
.sp
.LP
\fBfile\fR アクションは、通常ファイルを表します。\fBfile\fR アクションはペイロードを参照し、次の 4 つの標準属性があります。
.sp
.ne 2
.mk
.na
\fB\fBpath\fR\fR
.ad
.RS 10n
.rt  
ファイルがインストールされているファイルシステムのパス。これは \fBfile\fR アクションのキー属性です。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBmode\fR\fR
.ad
.RS 10n
.rt  
ファイルのアクセス権 (数値形式)。これらは ACL ではなく、単純なアクセス権のみです。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBowner\fR\fR
.ad
.RS 10n
.rt  
ファイルを所有するユーザーの名前。 
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup\fR \fR
.ad
.RS 10n
.rt  
ファイルを所有するグループの名前。 
.RE

.sp
.LP
ペイロードは、名前が付けられないという点で位置属性です。これは、アクション名のあとの最初の単語です。公開されたマニフェストでは、これはファイルの内容の \fBSHA-1\fR ハッシュです。これから公開する必要のあるマニフェスト内に存在する場合は、ペイロードを見つけることのできるパスを表します。\fBpkgsend\fR(1) を参照してください。値に等号が含まれている場合は、位置属性の代わりにハッシュ属性を使用できます。この両方を同じアクションで使用できます。ただし、ハッシュは同じである必要があります。
.sp
.LP
その他の属性には次のものがあります。
.sp
.ne 2
.mk
.na
\fB\fBpreserve\fR\fR
.ad
.RS 12n
.rt  
これは、ファイルの内容がそのファイルのインストールまたは最後のアップグレード以降に変更されたと判定された場合、アップグレード時にその内容を上書きすべきではないことを指定します。初期インストール時に既存のファイルが見つかった場合、そのファイルは回収されます (\fB/var/pkg/lost+found\fR 内に格納されます)。
.sp
\fBpreserve\fR の値が \fBrenameold\fR である場合は、既存のファイルの名前が拡張子 \fB\&.old\fR を使用して変更され、新しいファイルがその場所に置かれます。
.sp
\fBpreserve\fR の値が \fBrenamenew\fR である場合は、既存のファイルがそのままになり、新しいファイルが拡張子 \fB\&.new\fR を使用してインストールされます。
.sp
\fBpreserve\fR の値が \fBlegacy\fR である場合は、初期のパッケージインストールでこのファイルはインストールされません。アップグレード時、既存のファイルはすべて拡張子 \fB\&.legacy\fR を使用して名前が変更され、新しいファイルがその場所に置かれます。
.sp
\fBpreserve\fR の値が \fBtrue\fR (または、\fBstrawberry\fR などの上に示されていない値) である場合は、既存のファイルがそのままになり、新しいファイルはインストールされません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBoverlay\fR\fR
.ad
.RS 12n
.rt  
これは、このアクションによってほかのパッケージが同じ場所にファイルを提供できるか、またはこのアクションによって別のファイルをオーバーレイすることを目的にしたファイルが提供されるかを指定します。この機能は、どの自己アセンブリにも参加しておらず (たとえば、\fB/etc/motd\fR)、かつ安全に上書きできる構成ファイルで使用されることを目的にしています。
.sp
\fBoverlay\fR が指定されていない場合は、複数のパッケージが同じ場所にファイルを提供することはできません。
.sp
\fBoverlay\fR の値が \fBallow\fR である場合は、ほかの 1 つパッケージが同じ場所にファイルを提供することを許可されます。\fBpreserve\fR 属性も同時に設定されていないかぎり、この値は意味を持ちません。
.sp
\fBoverlay\fR の値が \fBtrue\fR である場合は、このアクションによって提供されたファイルにより、\fBallow\fR を指定したほかのアクションがすべて上書きされます。インストールされたファイルへの変更は、オーバーレイしているファイルの \fBpreserve\fR 属性の値に基づいて保持されます。削除時、ファイルの内容は、\fBpreserve\fR 属性が指定されたかどうかには関係なく、オーバーレイされているアクションがまだインストールされている場合は保持されます。別のファイルをオーバーレイできるのは 1 つのアクションだけであり、\fBmode\fR、\fBowner\fR、および \fBgroup\fR 属性が一致している必要があります。
.RE

.sp
.LP
ファイルは「味見」してみることもできます。その「風味」に応じて、追加で属性を付けることができます。ELF ファイルの場合は、次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBelfarch\fR\fR
.ad
.RS 17n
.rt  
ELF ファイルのアーキテクチャー。これは、そのファイルが構築されたアーキテクチャー上での \fBuname -p\fR の出力です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBelfbits\fR\fR
.ad
.RS 17n
.rt  
これは \fB32\fR または \fB64\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBelfhash\fR\fR
.ad
.RS 17n
.rt  
これは、そのファイル内の「興味深い」ELF セクションのハッシュです。これらは、バイナリがロードされるときにメモリーにマップされるセクションです。これらは、2 つのバイナリの実行可能ファイルの動作が異なるかどうかを判定するときに考慮する必要のある唯一のセクションです。
.RE

.sp
.ne 2
.mk
.na
\fB\fBoriginal_name\fR\fR
.ad
.RS 17n
.rt  
この属性は、パッケージからパッケージに、または場所から場所に、あるいはその両方で移動している編集可能なファイルを処理するために使用されます。この形式は、元のパッケージの名前のあとに、コロンとこのファイルの元のパスが続きます。削除されているファイルはすべて、そのパッケージとパス、または \fBoriginal_name\fR 属性の値 (指定されている場合) のどちらかを使用して記録されます。\fBoriginal_name\fR 属性が設定された、インストールされている編集可能なファイルはすべて、それが同じパッケージ化の操作の一部として削除されている場合は、その名前のファイルを使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrevert-tag\fR\fR
.ad
.RS 17n
.rt  
この属性は、セットとして元に戻すべき編集可能なファイルをタグ付けするために使用されます。複数の revert-tag 値を指定できます。これらのいずれかのタグを指定して \fBpkg revert\fR が呼び出されると、ファイルはマニフェストで定義された状態に戻ります。\fBpkg\fR(1) を参照してください。
.RE

.SS "ディレクトリアクション"
.sp
.LP
\fBdir\fR アクションは、ファイルシステムオブジェクトを表すという点で \fBfile\fR アクションに似ています。\fBdir\fR アクションは、通常ファイルの代わりにディレクトリを表します。\fBdir\fR アクションには、\fBfile\fR アクションと同じ 4 つの標準属性があり、\fBpath\fR がキー属性です。
.sp
.LP
ディレクトリは、IPS でカウントされる参照です。あるディレクトリを明示的または暗黙的に参照している最後のパッケージが参照を行わなくなると、そのディレクトリは削除されます。そのディレクトリにパッケージ解除されたファイルシステムオブジェクトが含まれている場合、それらの項目は \fB$IMAGE_META/lost+found\fR に移動されます。\fB$IMAGE_META\fR についての詳細は、「ファイル」の節を参照してください。
.sp
.LP
パッケージ解除された内容を新しいディレクトリに移動するために、次の属性が役立つことがあります。
.sp
.ne 2
.mk
.na
\fB\fBsalvage-from\fR\fR
.ad
.RS 16n
.rt  
これは、回収された項目のディレクトリを指定します。このような属性を持つディレクトリは、作成時、回収されたディレクトリの内容を継承します (その内容が存在する場合)。
.RE

.SS "リンクアクション"
.sp
.LP
\fBlink\fR アクションはシンボリックリンクを表します。\fBlink\fR アクションには、次の標準属性があります。
.sp
.ne 2
.mk
.na
\fB\fBpath\fR\fR
.ad
.sp .6
.RS 4n
シンボリックリンクがインストールされるファイルシステムのパス。これは \fBlink\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtarget\fR\fR
.ad
.sp .6
.RS 4n
シンボリックリンクのターゲット。リンクの解決先のファイルシステムオブジェクト。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator\fR\fR
.ad
.sp .6
.RS 4n
特定のメディエーショングループ (たとえば、\fBpython\fR) に参加しているすべてのパス名によって共有されているメディエーション名前空間内のエントリを指定します。\fBmediator-version\fR または \fBmediator-implementation\fR、あるいはその両方に基づいてリンクメディエーションを実行できます。特定のパス名に対してメディエートされたリンクはすべて、同じメディエータを指定する必要があります。ただし、すべてのメディエータバージョンおよび実装が、特定のパスでリンクを提供する必要はありません。メディエーションがリンクを提供していない場合は、そのメディエーションが選択されたときにリンクが削除されます。特定のバージョンまたは実装、あるいはその両方と組み合わせた \fBmediator\fR は、パッケージシステムで使用するために選択できるメディエーションを表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-version\fR\fR
.ad
.sp .6
.RS 4n
\fBmediator\fR 属性で記述されたインタフェースの (負にならない整数のドットで区切られた並びとして表された) バージョンを指定します。この属性は、\fBmediator\fR が指定され、\fBmediator-implementation\fR は指定されていない場合に必要です。ローカルシステム管理者は、使用するバージョンを明示的に設定できます。指定された値は一般に、リンクを提供しているパッケージのバージョンに一致するようにしてください (たとえば、\fBruntime/python-26\fR は \fBmediator-version=2.6\fR を使用します)。ただし、これは必須ではありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-implementation\fR\fR
.ad
.sp .6
.RS 4n
\fBmediator-version\fR に加えて、またはこの代わりに使用するメディエータの実装を指定します。実装の文字列は順序付けられているとは見なされず、システム管理者によって明示的に指定されていない場合は、\fBpkg \fR(5) によって文字列が任意に選択されます。
.sp
この値は、英数字とスペースで構成された任意の長さの文字列にすることができます。実装自体をバージョン管理できるか、または実際にバージョン管理されている場合は、文字列の最後の @ のあとに (負にならない整数のドットで区切られた並びとして表された) バージョンを指定します。実装の複数のバージョンが存在する場合、デフォルトの動作では、最大のバージョンを持つ実装が選択されます。
.sp
特定のパスにある実装メディエーションリンクの 1 つのインスタンスだけがシステムにインストールされている場合は、その 1 つのインスタンスが自動的に選択されます。このパスにある将来のリンクがインストールされても、ベンダー、サイト、またはローカルの上書きが適用されないかぎり、またはいずれかのリンクのバージョンがメディエートされた場合、このリンクは切り替えられません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-priority\fR\fR
.ad
.sp .6
.RS 4n
メディエートされたリンクの競合を解決する場合、\fBpkg\fR(5) は通常、\fBmediator-version\fR の最大の値を持つリンクを選択するか、またはそれが不可能な場合は \fBmediator-implementation\fR に基づいて選択します。この属性は、正常な競合解決処理のための上書きを指定するために使用されます。
.sp
この属性が指定されていない場合は、デフォルトのメディエータ選択ロジックが適用されます。
.sp
この値が \fBvendor\fR である場合は、このリンクが、\fBmediator-priority\fR が指定されていないリンクより優先されます。
.sp
この値が \fBsite\fR である場合は、このリンクが、\fBvendor\fR の値を持つリンクや、\fBmediator-priority\fR が指定されていないリンクより優先されます。
.sp
ローカルシステム管理者は、上で説明した選択ロジックを上書きできます。
.RE

.SS "ハードリンクアクション"
.sp
.LP
\fBhardlink\fR アクションは、ハードリンクを表します。このアクションは \fBlink\fR アクションと同じ属性を持ち、そのキー属性も同じく \fBpath\fR です。
.SS "ドライバアクション"
.sp
.LP
\fBdriver\fR アクションはデバイスドライバを表します。\fBdriver\fR アクションはペイロードを参照しません。ドライバファイル自体を \fBfile\fR アクションとしてインストールする必要があります。次の属性が認識されます (詳細は \fBadd_drv\fR(1M) を参照)。
.sp
.ne 2
.mk
.na
\fB\fBname\fR \fR
.ad
.RS 15n
.rt  
ドライバの名前。多くの場合はドライババイナリのファイル名ですが、必ずしもそうとは限りません。これは \fBdriver\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBalias\fR\fR
.ad
.RS 15n
.rt  
これはドライバの別名を表します。特定のドライバが複数の \fBalias\fR 属性を持つことができます。特殊な引用符の規則は必要ありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBclass\fR\fR
.ad
.RS 15n
.rt  
これはドライバクラスを表します。特定のドライバが複数の \fBclass\fR 属性を持つことができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBperms\fR\fR
.ad
.RS 15n
.rt  
これは、ドライバのデバイスノードのファイルシステムアクセス権を表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBclone_perms\fR\fR
.ad
.RS 15n
.rt  
これは、このドライバに対する複製ドライバのマイナーノードのファイルシステムアクセス権を表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpolicy\fR\fR
.ad
.RS 15n
.rt  
これは、デバイスのための追加のセキュリティーポリシーを指定します。特定のドライバが複数の \fBpolicy\fR 属性を持つことができますが、マイナーデバイスの指定が複数の属性に存在することはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprivs\fR\fR
.ad
.RS 15n
.rt  
これは、ドライバで使用される特権を指定します。特定のドライバが複数の \fBprivs\fR 属性を持つことができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdevlink\fR\fR
.ad
.RS 15n
.rt  
これは \fB/etc/devlink.tab\fR 内のエントリを指定します。この値はファイルに書き込まれる行そのものであり、タブは \fB\\t\fR で示されます。詳細は、\fBdevlinks\fR(1M) を参照してください。特定のドライバが複数の \fBdevlink\fR 属性を持つことができます。
.RE

.SS "依存アクション"
.sp
.LP
\fBdepend\fR アクションは、パッケージ間の依存関係を表します。あるパッケージが別のパッケージに依存することがあります。たとえば、最初のパッケージの機能を有効にする (場合によってはインストールする) ために、2 番目のパッケージの機能が必要な場合があります。依存関係は省略可能です。インストール時に依存関係が満たされない場合、パッケージシステムはほかの制約に応じて、依存パッケージをインストールするか、または十分に新しいバージョンに更新しようとします。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBfmri\fR\fR
.ad
.RS 14n
.rt  
依存パッケージを表す FMRI。これは \fBdependency\fR アクションのキー属性です。\fBfmri\fR 値にパブリッシャーを含めることはできません。パッケージ名は完全であると見なされます。タイプ \fBrequire-any\fR の依存関係は、複数の \fBfmri\fR 属性を持つことができます。\fBfmri\fR 値でバージョンは省略可能ですが、依存関係のタイプによっては、バージョンのない \fBfmri\fR は無意味である場合があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtype\fR\fR
.ad
.RS 14n
.rt  
依存関係のタイプ。
.sp
この値が \fBrequire\fR である場合は、依存関係が必要であり、\fBfmri\fR 属性で指定されたバージョン以上のバージョンを持っている必要があります。バージョンが指定されていない場合は、任意のバージョンが依存関係を満たします。パッケージの必要な依存関係のいずれかを満たすことができない場合、そのパッケージはインストールできません。
.sp
この値が \fBoptional\fR である場合は、依存関係 (存在する場合) が、指定されたバージョンレベル以上に存在する必要があります。
.sp
この値が \fBexclude\fR である場合は、指定されたバージョンレベル以上に依存関係が存在すると、包含するパッケージをインストールできません。バージョンが指定されていない場合、依存パッケージは、依存関係を指定しているパッケージと同時にインストールできません。
.sp
この値が \fBincorporate\fR である場合、依存関係は省略可能ですが、依存パッケージのバージョンが制約されます。下の「制約と凍結」を参照してください。
.sp
この値が \fBrequire-any\fR である場合は、複数の \fBfmri\fR 属性で指定された複数の依存パッケージのうちのいずれか 1 つが、依存関係のタイプ \fBrequire\fR と同じ規則に従って依存関係を満たすことができます。
.sp
この値が \fBconditional\fR である場合は、\fBpredicate\fR 属性で定義されたパッケージがシステム上に存在する場合にのみ依存関係が必要です。
.sp
この値が \fBorigin\fR である場合は、依存関係 (存在する場合) が、インストールの前に変更されるイメージ上の指定された値以上に存在する必要があります。\fBroot-image\fR 属性の値が \fBtrue\fR である場合、このパッケージをインストールするには、/ をルートとするイメージ上に依存関係が存在する必要があります。
.sp
この値が \fBgroup\fR である場合は、パッケージがイメージ回避リスト上にないかぎり、依存関係が必要です。廃止されたパッケージは、暗黙のうちにグループの依存関係を満たすことに注意してください。\fBpkg\fR(1) の \fBavoid\fR サブコマンドを参照してください。
.sp
この値が \fBparent\fR である場合は、このイメージが子イメージでなければ、依存関係は無視されます。このイメージが子イメージである場合は、親イメージ内に依存関係が存在する必要があります。\fBparent\fR 依存関係でのパッケージバージョンの照合は、\fBincorporate\fR 依存関係で使用されるものと同じです。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpredicate\fR\fR
.ad
.RS 14n
.rt  
\fBconditional\fR 依存関係の述語を表す FMRI。
.RE

.sp
.ne 2
.mk
.na
\fB\fBroot-image\fR\fR
.ad
.RS 14n
.rt  
先に説明した \fBorigin\fR 依存関係に対してのみ有効です。
.RE

.SS "ライセンスアクション"
.sp
.LP
\fBlicense\fR アクションは、パッケージの内容に関連したライセンスやその他の情報ファイルを表します。パッケージは \fBlicense\fR アクションの使用を通して、ライセンス、免責条項、またはその他のガイダンスをパッケージインストーラに提供できます。
.sp
.LP
\fBlicense\fR アクションのペイロードは、パッケージに関連したイメージメタデータディレクトリに提供され、人間が読める形式のテキストデータのみが含まれているべきです。HTML やその他の形式のマークアップが含まれていてはいけません。\fBlicense\fR アクションは、属性を通して、関連するペイロードが表示または同意、あるいはその両方を必要としていることをクライアントに示すことができます。表示または同意、あるいはその両方の方法は、クライアントに任されています。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBlicense\fR\fR
.ad
.RS 16n
.rt  
これは \fBlicense\fR アクションのキー属性です。この属性は、ユーザーがライセンスのテキスト自体を読まなくてもその内容を判断できるように支援するための、ライセンスの意味のある説明を提供します。この値のいくつかの例を次に示します。
.RS +4
.TP
.ie t \(bu
.el o
ABC Co. Copyright Notice
.RE
.RS +4
.TP
.ie t \(bu
.el o
ABC Co. Custom License
.RE
.RS +4
.TP
.ie t \(bu
.el o
Common Development and Distribution License 1.0 (CDDL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
GNU General Public License 2.0 (GPL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
GNU General Public License 2.0 (GPL) Only
.RE
.RS +4
.TP
.ie t \(bu
.el o
MIT License
.RE
.RS +4
.TP
.ie t \(bu
.el o
Mozilla Public License 1.1 (MPL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Simplified BSD License
.RE
上に示すように、可能な場合は常にライセンスのバージョンを説明に含めることをお勧めします。\fBlicense\fR 値は、パッケージ内で一意である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmust-accept\fR\fR
.ad
.RS 16n
.rt  
\fBtrue\fR の場合は、関連するパッケージをインストールまたは更新するには、ユーザーがこのライセンスに同意する必要があります。この属性を省略すると、\fBfalse\fR と同等になります。同意の方法 (たとえば、対話型または構成ベース) は、クライアントに任されています。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmust-display\fR\fR
.ad
.RS 16n
.rt  
\fBtrue\fR の場合は、パッケージ化の操作中に、クライアントがこのアクションのペイロードを表示する必要があります。この値を省略すると、\fBfalse\fR と同等になります。この属性は、コピーライト表示に使用してはいけません。操作中に表示する必要のある実際のライセンスまたはその他の素材にのみ使用してください。表示の方法は、クライアントに任されています。
.RE

.SS "レガシーアクション"
.sp
.LP
\fBlegacy\fR アクションは、従来のパッケージシステムで使用されるパッケージデータを表します。このアクションに関連付けられた属性は、従来のシステムのデータベースに追加されます。そのため、これらのデータベースに問い合わせを行なっているツールは、従来のパッケージが実際にインストールされているかのように動作できます。特にこれにより、\fBpkg\fR 属性で指定されたパッケージがシステムにインストールされていることを従来のシステムに十分に確信させることができるため、このパッケージを、依存関係を満たすために使用できるようになります。
.sp
.LP
\fBpkginfo\fR(4) のパラメータに従って指定された次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBcategory\fR\fR
.ad
.RS 12n
.rt  
\fBCATEGORY\fR パラメータの値。デフォルト値は \fBsystem\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdesc\fR\fR
.ad
.RS 12n
.rt  
\fBDESC\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhotline\fR\fR
.ad
.RS 12n
.rt  
\fBHOTLINE\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBname\fR \fR
.ad
.RS 12n
.rt  
\fBNAME\fR パラメータの値。デフォルト値は \fBnone provided\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg\fR\fR
.ad
.RS 12n
.rt  
インストールされるパッケージの略語。デフォルト値は、パッケージの FMRI の名前です。これは \fBlegacy\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvendor\fR\fR
.ad
.RS 12n
.rt  
\fBVENDOR\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBversion\fR\fR
.ad
.RS 12n
.rt  
VERSION パラメータの値。デフォルト値は、パッケージの FMRI のバージョンです。
.RE

.SS "設定アクション"
.sp
.LP
\fBset\fR アクションは、パッケージの説明などの、パッケージレベルの属性 (またはメタデータ) を表します。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBname\fR \fR
.ad
.RS 9n
.rt  
属性の名前。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvalue\fR\fR
.ad
.RS 9n
.rt  
属性に与えられた値。
.RE

.sp
.LP
\fBset\fR アクションは、パッケージ作成者が選択した任意のメタデータを提供できます。ただし、パッケージシステムにとって特別な意味を持つ、適切に定義された属性名がいくつか存在します。
.sp
.ne 2
.mk
.na
\fB\fBinfo.classification\fR\fR
.ad
.RS 23n
.rt  
\fBpkg\fR(5) クライアントがパッケージを分類するために使用できる 1 つ以上のトークン。この値には、スキーム (「org.opensolaris.category.2008」や「org.acm.class.1998」など) と実際の分類 (「アプリケーション/ゲーム」など) がコロン (:) で区切られて含まれています。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.description\fR\fR
.ad
.RS 23n
.rt  
パッケージの内容と機能の詳細な説明。通常は、1 つの段落程度の長さです。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.obsolete\fR\fR
.ad
.RS 23n
.rt  
\fBtrue\fR の場合、パッケージは廃止としてマークされています。廃止されたパッケージには、ほかの設定アクション以外のアクションは存在せず、また名前変更としてマークすることはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.renamed\fR\fR
.ad
.RS 23n
.rt  
\fBtrue\fR の場合は、パッケージの名前が変更されました。このパッケージには、このパッケージの名前が変更された先のパッケージバージョンを指す 1 つ以上の \fBdepend\fR アクションも存在する必要があります。パッケージを名前変更と廃止の両方としてマークすることはできませんが、それ以外は任意の数の設定アクションが存在できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.summary\fR\fR
.ad
.RS 23n
.rt  
パッケージの短い、1 行の説明。
.RE

.SS "グループアクション"
.sp
.LP
\fBgroup\fR アクションは、\fBgroup\fR(4) で定義されるのと同様の UNIX グループを定義します。グループパスワードのサポートはありません。このアクションで定義されたグループには最初、ユーザーリストがありません。ユーザーは、\fBuser\fR アクションを使用して追加できます。次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBgroupname\fR\fR
.ad
.RS 13n
.rt  
グループの名前の値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgid\fR\fR
.ad
.RS 13n
.rt  
グループの一意の数値 ID。デフォルト値は、100 未満の最初に空いているグループです。
.RE

.SS "ユーザーアクション"
.sp
.LP
\fBuser\fR アクションは、\fB/etc/passwd\fR、\fB/etc/shadow\fR、\fB/etc/group\fR、および \fB/etc/ftpd/ftpusers\fR ファイルで定義されるのと同様の UNIX ユーザーを定義します。このアクションでユーザーを定義すると、しかるべきファイルにエントリが追加されます。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBusername\fR\fR
.ad
.RS 15n
.rt  
ユーザーの一意の名前。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpassword\fR\fR
.ad
.RS 15n
.rt  
ユーザーの暗号化パスワード。デフォルト値は \fB*LK*\fR です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBuid\fR\fR
.ad
.RS 15n
.rt  
ユーザーの一意の UID。デフォルト値は、100 未満の最初に空いている値です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup\fR \fR
.ad
.RS 15n
.rt  
ユーザーの一次グループの名前。\fB/etc/group\fR に存在する必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgcos-field\fR\fR
.ad
.RS 15n
.rt  
\fB/etc/passwd\fR 内の \fBgcos\fR フィールドの値。デフォルト値は \fBusername\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhome-dir\fR\fR
.ad
.RS 15n
.rt  
ユーザーのホームディレクトリ。デフォルト値は / です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlogin-shell\fR\fR
.ad
.RS 15n
.rt  
ユーザーのデフォルトのシェル。デフォルト値は空です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup-list\fR\fR
.ad
.RS 15n
.rt  
ユーザーが属している二次グループ。\fBgroup\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBftpuser\fR\fR
.ad
.RS 15n
.rt  
\fBtrue\fR または \fBfalse\fR に設定できます。\fBtrue\fR のデフォルト値は、ユーザーが FTP 経由のログインを許可されていることを示します。\fBftpusers\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlastchg\fR\fR
.ad
.RS 15n
.rt  
1970 年 1 月 1 日と、パスワードが最後に変更された日付の間の日数。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmin\fR\fR
.ad
.RS 15n
.rt  
パスワード変更の間の必要な最小日数。パスワードの有効期限を有効にするには、このフィールドを 0 以上に設定する必要があります。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmax\fR\fR
.ad
.RS 15n
.rt  
パスワードが有効な最大日数。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBwarn\fR\fR
.ad
.RS 15n
.rt  
パスワードの期限が切れる前にユーザーに警告が表示される日数。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBinactive\fR\fR
.ad
.RS 15n
.rt  
そのユーザーに許可されている非活動の日数。これはマシンごとにカウントされます。最終ログインに関する情報は、そのマシンの \fBlastlog\fR ファイルから取得されます。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBexpire\fR\fR
.ad
.RS 15n
.rt  
UNIX エポック (1970 年 1 月 1 日) 以降の日数として表される絶対的な日付。この日数に達すると、ログインを使用できなくなります。たとえば、13514 の期限切れの値は、ログインの有効期限が 2007 年 1 月 1 日であることを指定します。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBflag\fR\fR
.ad
.RS 15n
.rt  
空に設定されています。\fBshadow\fR(4) を参照してください。
.RE

.SH アクチュエータ
.sp
.LP
コンテキストによっては、特定のアクションの準備として、またはその導入のあとに、追加の操作を実行することが適している場合があります。これらの追加の操作は一般に、ライブシステムイメージ上でのみ必要であり、またオペレーティングシステムに固有のものです。パッケージのインストールまたは削除に関与する複数のアクションのアクチュエータが同一である場合、アクチュエータの存在に対応する操作は、そのインストールまたは削除に対して 1 回実行されます。
.sp
.LP
アクチュエータを誤って指定すると、そのアクチュエータがインストールを安全に進めるための手段を決定できない場合、パッケージのインストールが失敗することがあります。
.sp
.LP
次のアクチュエータが定義されています。
.sp
.ne 2
.mk
.na
\fB\fBreboot-needed\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR または \fBfalse\fR に設定できます。パッケージのインストール中に、このアクチュエータが \fBtrue\fR に設定されたアクションがインストールまたは更新された場合は、パッケージ化のトランザクションをリブートが必要であるとして通知できます。特定のクライアント実装では、イメージがライブシステムイメージである場合、イメージの複製を使用してパッケージ操作全体を実行するなどの、追加の手順が実行される可能性があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdisable_fmri\fR、\fBrefresh_fmri\fR、\fBrestart_fmri\fR、\fBsuspend_fmri\fR\fR
.ad
.sp .6
.RS 4n
これらの各アクチュエータは、パッケージのインストールまたは削除中に操作するサービスインスタンスの FMRI の値を取ります。\fBdisable_fmri\fR を指定すると、\fBsvcadm\fR(1M) の \fBdisable\fR サブコマンドに従って、アクションの削除の前に特定の FMRI が無効になります。\fBrefresh_fmri\fR および \fBrestart_fmri\fR を指定すると、\fBsvcadm\fR(1M) の対応するサブコマンドに従って、アクションのインストールまたは更新のあとに特定の FMRI が更新または再起動されます。最後に、\fBsuspend_fmri\fR を指定すると、アクションのインストールフェーズの前に特定の FMRI が一時的に無効になり、そのフェーズが完了したあとに有効になります。
.sp
この値には、複数のサービスインスタンスに一致するパターンを含めることができます。ただし、それをインスタンスを示さずに暗黙的に行うのではなく、\fBsvcs\fR(1) によって受け入れられた glob を使用して明示的に行う必要があります。
.RE

.SH 制約と凍結
.sp
.LP
パッケージが新しいバージョンに移行される場合、またはシステムに追加されたり、システムから削除されたりする場合、選択されるバージョンや、削除が許可されるかどうかは、そのパッケージに対するさまざまな制約によって決定されます。これらの制約は、依存関係の形式でほかのパッケージが定義するか、または凍結の形式で管理者が定義できます。
.sp
.LP
制約のもっとも一般的な形式は、上の「依存アクション」で説明したように、\fBrequire\fR 依存関係によって提供されます。このような制約によって、パッケージがダウングレードまたは削除されることが回避されます。
.sp
.LP
オペレーティングシステムのほとんどの部分は、\fBincorporation\fR と呼ばれるパッケージによってカプセル化されています。これらのパッケージは主に、\fBincorporate\fR 依存関係によって表される制約を提供します。
.sp
.LP
上で説明したように、組み込まれたパッケージがシステム上に存在する必要はありませんが、存在する場合は、包括的な最小バージョンと排他的な最大バージョンの両方を指定します。たとえば、依存する FMRI のバージョンが 1.4.3 の場合は、1.4.3 未満のバージョンも、1.4.4 以上のどのバージョンも依存関係を満たしません。ただし、1.4.3.7 などの、ドットで区切られた並びを拡張しただけのバージョンは許可されます。
.sp
.LP
incorporation は、システムの各部の同期的なアップグレードを強制的に行うために使用されます。C ライブラリやカーネルなどの一部のコンポーネントでは、これは基本的な要件です。ほかには依存関係が存在しない単純なユーザーランドコンポーネントなどのその他のコンポーネントでは、incorporation の特定のバージョンから参照できるテストされた、既知の一連のパッケージバージョンを提供するためだけに、同期アップグレードが使用されます。
.sp
.LP
incorporation は単なるパッケージであるため、削除することができ、それが提供しているすべての制約がそれによって緩和されます。ただし、その緩和は安全ではないため、OmniOS によって提供される多くの incorporation が、それらの incorporation によって組み込まれているパッケージには必要です。
.sp
.LP
パッケージを、インストール済みの incorporation によって許可されていないバージョンにアップグレードしようとしても、要求を満たすためにその incorporation の新しいバージョンを見つけようとする試みは行われず、そのアップグレードは失敗します。制約自体を移動する必要があるが、それを指定している incorporation を削除できない場合は、その incorporation を、制約の目的のバージョンを指定するバージョンにアップグレードする必要があります。incorporation をアップグレードすると、その新しいバージョンによって提供される制約を満たさない組み込まれたパッケージもすべてアップグレードされます。
.sp
.LP
システム管理者は、\fBpkg freeze\fR コマンドを使用してパッケージを制約できます。バージョンが指定されていない場合、指定されたパッケージは、システムにインストールされているバージョンに制約されます。バージョン管理されたパッケージが指定された場合、この管理上の制約 (つまり、凍結) は、\fBfmri\fR 属性が指定されたパッケージバージョンの値を持った状態で incorporate 依存関係がインストールされているかのように機能します。
.sp
.LP
凍結がパッケージシステムによって自動的に解除されることはありません。制約を緩和するには、\fBpkg unfreeze\fR コマンドを使用します。
.SH パブリッシャーとリポジトリ
.sp
.LP
上で詳細に説明したように、パブリッシャーとは単に、パッケージクライアントがパッケージのプロバイダを識別するために使用する名前です。パブリッシャーは、パッケージリポジトリまたはパッケージアーカイブ、あるいはその両方を使用してパッケージを配布できます。現在パッケージシステムでサポートされているリポジトリのタイプには、起点リポジトリとミラーリポジトリの 2 つがあります。
.sp
.LP
\fB起点\fRは、1 つ以上のパッケージのすべてのメタデータ (カタログ、マニフェスト、検索インデックスなど) と内容 (ファイル) を含むパッケージリポジトリです。イメージ内の特定のパブリッシャーに対して複数の起点が構成されている場合、パッケージクライアント API は、パッケージデータの取得元として最適な起点を選択しようとします。これはもっとも一般的なタイプのリポジトリであり、パッケージリポジトリ上で \fBpkgsend\fR または \fBpkgrecv\fR が使用された場合は常に、暗黙的に作成されます。
.sp
.LP
\fBミラー\fRは、パッケージの内容 (ファイル) のみを含むパッケージリポジトリです。イメージ内の特定のパブリッシャーに対して 1 つ以上のミラーが構成されている場合、クライアント API はパッケージ内容の取得のためのミラーを優先し、パッケージの内容の取得元として最適なミラーを選択しようとします。ミラーが到達不可能か、必要な内容が含まれていないか、またはより低速な場合、クライアント API は、構成されているいずれかの起点リポジトリから内容を取得します。ミラーは、\fBpkg.depotd\fR(1M) の動的ミラー機能を使用している、信頼できる一連のクライアント間の内容共有に使用されることを目的にしています。ミラーはまた、パッケージのメタデータへのアクセスを認証するために使用されることも目的にしています。ただし、パッケージの内容は認証なしで配布します。たとえば、あるクライアントが、アクセスするには SSL キーと証明書のペアが必要な \fBhttps\fR 起点と、パッケージの内容を提供する \fBhttp\fR ミラーを使用して構成される可能性があります。このようにして、認可クライアントだけがパッケージをインストールまたは更新できるようにしながら、パッケージ内容の取得のための認証のオーバーヘッドが回避されます。ミラーは、\fBfile\fR という名前のサブディレクトリとその親を除く、リポジトリのすべてのサブディレクトリを削除することによって作成できます。また、\fBpkg.depotd\fR(1M) のミラーモードを使用すると、起点リポジトリもミラーとしてプロビジョニングできます。
.SH プロパティー
.sp
.LP
イメージには、1 つ以上のプロパティーを関連付けることができます。これらのプロパティーは、イメージの目的、内容、および動作に関する情報を格納するために使用できます。完全なリストについては、\fBpkg\fR(1) を参照してください。
.SH イメージポリシー
.sp
.LP
ポリシーは、ブール値を使用してイメージプロパティーで定義されます。サポートされるポリシーには次のものがあります。
.sp
.ne 2
.mk
.na
\fB\fBflush-content-cache-on-success\fR\fR
.ad
.sp .6
.RS 4n
true の場合は、パッケージのインストールが成功したあと、ダウンロードされたファイルのキャッシュが消去されます。デフォルト値: \fBTrue\fR.
.RE

.sp
.ne 2
.mk
.na
\fB\fBsend-uuid\fR\fR
.ad
.sp .6
.RS 4n
true の場合は、パブリッシャーへのイメージを識別する一意の識別子 (UUID) が、すべての要求に対して送信されます。デフォルト値: \fBTrue\fR。
.RE

.SH ファイル
.sp
.LP
\fBpkg\fR(5) イメージは大きなファイルシステム内の任意の場所に配置できるため、相対パスを区別するためにトークン \fB$IMAGE_ROOT\fR が使用されます。標準的なシステムインストールでは、\fB$IMAGE_ROOT\fR は / と同等です。
.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_ROOT/var/pkg\fR\fR
.ad
.sp .6
.RS 4n
フルイメージまたは部分イメージのメタデータディレクトリ。
.RE

.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_ROOT/.org.opensolaris,pkg\fR\fR
.ad
.sp .6
.RS 4n
ユーザーイメージのメタデータディレクトリ。
.RE

.sp
.LP
特定のイメージのメタデータ内の特定のファイルおよびディレクトリに、修復や復旧中に役立つ情報を含めることができます。トークン \fB$IMAGE_META\fR は、そのメタデータを含む最上位レベルのディレクトリを参照するために使用されます。\fB$IMAGE_META\fR は通常、上に示した 2 つのパスのいずれかです。
.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_META/lost+found\fR\fR
.ad
.RS 26n
.rt  
パッケージ操作中に移動された、競合するディレクトリおよびファイルの場所。
.RE

.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_META/publisher\fR\fR
.ad
.RS 26n
.rt  
パブリッシャーごとに 1 つのディレクトリが含まれます。各ディレクトリにはパブリッシャー固有のメタデータが格納されます。
.RE

.sp
.LP
\fB$IMAGE_META\fR ディレクトリ階層内のその他のパスは非公開であり、変更される可能性があります。
.SH 属性
.sp
.LP
次の属性については、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件\fBpackage/pkg\fR
_
インタフェースの安定性不確実
.TE

.SH 関連項目
.sp
.LP
\fBpkg\fR(1), \fBpkgsend\fR(1), \fBpkg.depotd \fR(1M), \fBsvcadm\fR(1M), \fBpkginfo\fR(4)
.sp
.LP
\fBhttp://hub.opensolaris.org/bin/view/Project+pkg/\fR
